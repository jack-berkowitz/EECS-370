instruction memory:
	instrMem[ 0 ] = 0x0081001F ( lw 0 1 31 )
	instrMem[ 1 ] = 0x01C00000 ( noop )
	instrMem[ 2 ] = 0x01C00000 ( noop )
	instrMem[ 3 ] = 0x01C00000 ( noop )
	instrMem[ 4 ] = 0x00820020 ( lw 0 2 32 )
	instrMem[ 5 ] = 0x01C00000 ( noop )
	instrMem[ 6 ] = 0x01C00000 ( noop )
	instrMem[ 7 ] = 0x01C00000 ( noop )
	instrMem[ 8 ] = 0x000A0003 ( add 1 2 3 )
	instrMem[ 9 ] = 0x01C00000 ( noop )
	instrMem[ 10 ] = 0x01C00000 ( noop )
	instrMem[ 11 ] = 0x01C00000 ( noop )
	instrMem[ 12 ] = 0x00850021 ( lw 0 5 33 )
	instrMem[ 13 ] = 0x01C00000 ( noop )
	instrMem[ 14 ] = 0x01C00000 ( noop )
	instrMem[ 15 ] = 0x01C00000 ( noop )
	instrMem[ 16 ] = 0x00EB0000 ( sw 5 3 0 )
	instrMem[ 17 ] = 0x01C00000 ( noop )
	instrMem[ 18 ] = 0x01C00000 ( noop )
	instrMem[ 19 ] = 0x01C00000 ( noop )
	instrMem[ 20 ] = 0x00AE0000 ( lw 5 6 0 )
	instrMem[ 21 ] = 0x01C00000 ( noop )
	instrMem[ 22 ] = 0x01C00000 ( noop )
	instrMem[ 23 ] = 0x01C00000 ( noop )
	instrMem[ 24 ] = 0x011E0004 ( beq 3 6 4 )
	instrMem[ 25 ] = 0x01C00000 ( noop )
	instrMem[ 26 ] = 0x01C00000 ( noop )
	instrMem[ 27 ] = 0x01C00000 ( noop )
	instrMem[ 28 ] = 0x00000000 ( add 0 0 0 )
	instrMem[ 29 ] = 0x00120002 ( add 2 2 2 )
	instrMem[ 30 ] = 0x01800000 ( halt )
	instrMem[ 31 ] = 0x0000000A ( add 0 0 10 )
	instrMem[ 32 ] = 0x00000014 ( add 0 0 20 )
	instrMem[ 33 ] = 0x0000001F ( add 0 0 31 )

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x0081001F ( lw 0 1 31 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 0 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 2 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x0081001F ( lw 0 1 31 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 31
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 0 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 3 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 2 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x0081001F ( lw 0 1 31 )
		branchTarget 32 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 31
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 4 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 3 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 2 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x0081001F ( lw 0 1 31 )
		writeData = 10
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x00820020 ( lw 0 2 32 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 4 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 3 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x0081001F ( lw 0 1 31 )
		writeData = 10
end state

@@@
state before cycle 6 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 6 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x00820020 ( lw 0 2 32 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 32
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 4 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 7 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 7 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 6 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x00820020 ( lw 0 2 32 )
		branchTarget 37 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 32
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 8 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 8 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 7 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 6 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x00820020 ( lw 0 2 32 )
		writeData = 20
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 9 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x000A0003 ( add 1 2 3 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 8 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 7 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x00820020 ( lw 0 2 32 )
		writeData = 20
end state

@@@
state before cycle 10 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 10 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x000A0003 ( add 1 2 3 )
		pcPlus1 = 9
		readRegA = 10
		readRegB = 20
		offset = 3 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 8 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 11 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 11 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 10 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x000A0003 ( add 1 2 3 )
		branchTarget 12 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 30
		readRegB = 20 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 12 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 12 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 11 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 10 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x000A0003 ( add 1 2 3 )
		writeData = 30
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 13 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x00850021 ( lw 0 5 33 )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 12 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 11 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x000A0003 ( add 1 2 3 )
		writeData = 30
end state

@@@
state before cycle 14 starts:
	pc = 14
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 14 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x00850021 ( lw 0 5 33 )
		pcPlus1 = 13
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 33
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 12 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 15 starts:
	pc = 15
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 15 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 14 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x00850021 ( lw 0 5 33 )
		branchTarget 46 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 33
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 16 starts:
	pc = 16
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 16 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 15 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 14 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x00850021 ( lw 0 5 33 )
		writeData = 31
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 17 starts:
	pc = 17
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x00EB0000 ( sw 5 3 0 )
		pcPlus1 = 17
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 16 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 15 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x00850021 ( lw 0 5 33 )
		writeData = 31
end state

@@@
state before cycle 18 starts:
	pc = 18
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 18 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x00EB0000 ( sw 5 3 0 )
		pcPlus1 = 17
		readRegA = 31
		readRegB = 30
		offset = 0
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 16 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 19 starts:
	pc = 19
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000000A
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 19 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 18 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x00EB0000 ( sw 5 3 0 )
		branchTarget 17 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 31
		readRegB = 30
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 20 starts:
	pc = 20
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 20 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 19 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 18 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x00EB0000 ( sw 5 3 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 21 starts:
	pc = 21
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x00AE0000 ( lw 5 6 0 )
		pcPlus1 = 21
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 20 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 19 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x00EB0000 ( sw 5 3 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 22 starts:
	pc = 22
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 22 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x00AE0000 ( lw 5 6 0 )
		pcPlus1 = 21
		readRegA = 31
		readRegB = 0 (Don't Care)
		offset = 0
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 20 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 23 starts:
	pc = 23
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 23 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 22 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x00AE0000 ( lw 5 6 0 )
		branchTarget 21 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 31
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 24 starts:
	pc = 24
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 24 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 23 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 22 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x00AE0000 ( lw 5 6 0 )
		writeData = 30
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 25 starts:
	pc = 25
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 30
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x011E0004 ( beq 3 6 4 )
		pcPlus1 = 25
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 24 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 23 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x00AE0000 ( lw 5 6 0 )
		writeData = 30
end state

@@@
state before cycle 26 starts:
	pc = 26
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 30
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 26 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x011E0004 ( beq 3 6 4 )
		pcPlus1 = 25
		readRegA = 30
		readRegB = 30
		offset = 4
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 24 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 27 starts:
	pc = 27
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 30
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 27 (Don't Care)
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 26 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x011E0004 ( beq 3 6 4 )
		branchTarget 29
		eq ? True
		aluResult = 0 (Don't Care)
		readRegB = 30 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 28 starts:
	pc = 30
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 30
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x00120002 ( add 2 2 2 )
		pcPlus1 = 30
	ID/EX pipeline register:
		instruction = 0x01C00000 ( noop )
		pcPlus1 = 27 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 26 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x011E0004 ( beq 3 6 4 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 29 starts:
	pc = 31
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 30
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x01800000 ( halt )
		pcPlus1 = 31
	ID/EX pipeline register:
		instruction = 0x00120002 ( add 2 2 2 )
		pcPlus1 = 30
		readRegA = 20
		readRegB = 20
		offset = 2 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01C00000 ( noop )
		branchTarget 27 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x011E0004 ( beq 3 6 4 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 30 starts:
	pc = 32
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 30
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x0000000A ( add 0 0 10 )
		pcPlus1 = 32
	ID/EX pipeline register:
		instruction = 0x01800000 ( halt )
		pcPlus1 = 31
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x00120002 ( add 2 2 2 )
		branchTarget 32 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 40
		readRegB = 20 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 31 starts:
	pc = 33
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 20
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 30
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x00000014 ( add 0 0 20 )
		pcPlus1 = 33
	ID/EX pipeline register:
		instruction = 0x0000000A ( add 0 0 10 )
		pcPlus1 = 32
		readRegA = 0
		readRegB = 0
		offset = 10 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x01800000 ( halt )
		branchTarget 31 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x00120002 ( add 2 2 2 )
		writeData = 40
	WB/END pipeline register:
		instruction = 0x01C00000 ( noop )
		writeData = 0 (Don't Care)
end state
Machine halted
Total of 32 cycles executed
Final state of machine:

@@@
state before cycle 32 starts:
	pc = 34
	data memory:
		dataMem[ 0 ] = 0x0081001F
		dataMem[ 1 ] = 0x01C00000
		dataMem[ 2 ] = 0x01C00000
		dataMem[ 3 ] = 0x01C00000
		dataMem[ 4 ] = 0x00820020
		dataMem[ 5 ] = 0x01C00000
		dataMem[ 6 ] = 0x01C00000
		dataMem[ 7 ] = 0x01C00000
		dataMem[ 8 ] = 0x000A0003
		dataMem[ 9 ] = 0x01C00000
		dataMem[ 10 ] = 0x01C00000
		dataMem[ 11 ] = 0x01C00000
		dataMem[ 12 ] = 0x00850021
		dataMem[ 13 ] = 0x01C00000
		dataMem[ 14 ] = 0x01C00000
		dataMem[ 15 ] = 0x01C00000
		dataMem[ 16 ] = 0x00EB0000
		dataMem[ 17 ] = 0x01C00000
		dataMem[ 18 ] = 0x01C00000
		dataMem[ 19 ] = 0x01C00000
		dataMem[ 20 ] = 0x00AE0000
		dataMem[ 21 ] = 0x01C00000
		dataMem[ 22 ] = 0x01C00000
		dataMem[ 23 ] = 0x01C00000
		dataMem[ 24 ] = 0x011E0004
		dataMem[ 25 ] = 0x01C00000
		dataMem[ 26 ] = 0x01C00000
		dataMem[ 27 ] = 0x01C00000
		dataMem[ 28 ] = 0x00000000
		dataMem[ 29 ] = 0x00120002
		dataMem[ 30 ] = 0x01800000
		dataMem[ 31 ] = 0x0000001E
		dataMem[ 32 ] = 0x00000014
		dataMem[ 33 ] = 0x0000001F
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 40
		reg[ 3 ] = 30
		reg[ 4 ] = 0
		reg[ 5 ] = 31
		reg[ 6 ] = 30
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0x0000001F ( add 0 0 31 )
		pcPlus1 = 34
	ID/EX pipeline register:
		instruction = 0x00000014 ( add 0 0 20 )
		pcPlus1 = 33
		readRegA = 0
		readRegB = 0
		offset = 20 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0x0000000A ( add 0 0 10 )
		branchTarget 42 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 0x01800000 ( halt )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 0x00120002 ( add 2 2 2 )
		writeData = 40
end state
